server {
  return 404;
}

upstream csrf-example {
  keepalive 500;
  server unix:/root/run/gunicorn.sock fail_timeout=0;
}

server {
  server_name  csrf.solf.io;

  client_max_body_size 100m;

  location /static/ {
    alias /django-csrf-attack-example/static/;
  }

  location /media/ {
    alias /django-csrf-attack-example/media/;
  }

  location / {
    client_max_body_size 250M;
    # Access control for CORS
    add_header X-Frame-Options * always;
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "cache-control, content-range, accept, origin, session-id, content-disposition, x-requested-with, content-type, content-description, referer, user-agent, auth-token, additional, internal-secret-key, blockid, priority" always;
    add_header Access-Control-Allow-Credentials "true" always;

    # 10 minute pre-flight approval
    add_header Access-Control-Max-Age 600 always;

    if ($request_method = OPTIONS) {
      return 204;
    }

    proxy_pass http://csrf-example;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }




    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/csrf.solf.io/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/csrf.solf.io/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = csrf.solf.io) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  server_name  csrf.solf.io;
    listen 80;
    return 404; # managed by Certbot


}